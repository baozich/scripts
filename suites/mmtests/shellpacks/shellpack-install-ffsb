#!/bin/bash
# ffsb installer
P=ffsb-install
WEB_LOCATION=http://heanet.dl.sourceforge.net/project/ffsb/ffsb/
#ffsb-6.0-rc2/ffsb-6.0-rc2.tar.bz2
MIRROR_LOCATION="$WEBROOT/ffsb/"
DEFAULT_VERSION=6.0-rc2
. $SHELLPACK_INCLUDE/common.sh

# Basic argument parser
while [ "$1" != "" ]; do
  case "$1" in
    -v)
            VERSION=$2
	    shift 2
	    ;;
    *)
            echo Unrecognised option: $1
	    shift
  esac
done

if [ -z "$VERSION" ]; then
	VERSION=$DEFAULT_VERSION
fi

# Unconditionally fetch the tar to find out the real version number
WEB_LOCATION=$WEB_LOCATION/ffsb-$VERSION
TARFILE=ffsb-${VERSION}.tar.bz2
sources_fetch $WEB_LOCATION/$VERSION/$TARFILE $MIRROR_LOCATION/$TARFILE $SHELLPACK_SOURCES/$TARFILE

# Building from scratch, uncompress the tar
cd $SHELLPACK_SOURCES
tar xf $TARFILE
if [ $? -ne 0 ]; then
  error "$P: tar xf $TARFILE failed"
  popd > /dev/null
  exit $SHELLPACK_ERROR
fi

# Rename directory to something we expect.
DST_DIR=`tar tf $TARFILE | head -n 1 | awk -F / '{print $1}'`
mv $DST_DIR ffsb-${VERSION}
pushd ffsb-${VERSION} > /dev/null || die Failed to rename tar

# Configure
./configure --prefix=$SHELLPACK_SOURCES/ffsb-${VERSION}-installed
if [ $? -ne 0 ]; then
	error "$P: configure failed"
	popd > /dev/null
	exit $SHELLPACK_ERROR
fi

# Build
make
if [ $? -ne 0 ]; then
	error "$P: make failed"
	popd > /dev/null
	exit $SHELLPACK_ERROR
fi

# Install
make install
if [ $? -ne 0 ]; then
	error "$P: install failed"
	popd > /dev/null
	exit $SHELLPACK_ERROR
fi


echo ffsb installed successfully
#### Description Flexible FileSystem Benchmark
#### Details ffsb 4
