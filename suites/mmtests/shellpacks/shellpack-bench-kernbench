#!/bin/bash
# Benchmark a number of kernel builds

P='kernbench'
KERNEL_VERSION=2.6.30
ITERATIONS=5
NUM_CPUS=`grep processor /proc/cpuinfo | wc -l`
FACTOR=1
. $SHELLPACK_INCLUDE/common.sh

# Basic args parser
while [ "$1" != "" ]; do
	case "$1" in
		-k)
			KERNEL_VERSION=$2
			shift 2;;
		-i)
			ITERATIONS=$2
			shift 2;;
		-t)
			THREADS=$2
			shift 2;;
		-f)
			FACTOR=$2
			shift 2;;
	esac
done

WEB_LOCATION=http://ftp.ie.kernel.org/pub/linux/kernel/v2.6/linux-$KERNEL_VERSION.tar.gz
MIRROR_LOCATION=$WEBROOT/kernbench/linux-$KERNEL_VERSION.tar.gz
THREADS=$(($NUM_CPUS*$FACTOR))

pushd $SHELLPACK_TEMP > /dev/null

sources_fetch $WEB_LOCATION $MIRROR_LOCATION ./linux-$KERNEL_VERSION.tar.gz
tar xf linux-$KERNEL_VERSION.tar.gz || die Failed to extract
cd linux-$KERNEL_VERSION || die Unexpected layout

yes '' | make defconfig > /dev/null 2>&1 || die Failed to make defconfig

make -j$THREADS clean > /dev/null

echo Warming run
make -j$THREADS vmlinux > /dev/null 2>&1 || die Failed to build vmlinux
make clean >/dev/null

TIME_CMD=`which time`
if [ "$TIME_CMD" = "" ]; then
        TIMEFORMAT="%2Uuser %2Ssystem %Relapsed %P%%CPU"
        TIME_CMD="time"
fi

# Build pass
for i in `seq 1 $ITERATIONS`; do
	echo Pass $i
	sync

	$TIME_CMD make -j$THREADS vmlinux 2>> $LOGDIR_RESULTS/time.$i > /dev/null
	grep elapsed $LOGDIR_RESULTS/time.$i
	make clean >/dev/null
done

# Gather results and cleanup
cat $LOGDIR_RESULTS/time.* | grep elapsed | tee $LOGDIR_RESULTS/time
rm -rf $SHELLPACK_TEMP

# clean up the tree to save space
popd > /dev/null
rm -rf $TMPDIR/kernbench

exit 0
#### Description Benchmark based on kernel builds
#### Details kernbench-bench 16
